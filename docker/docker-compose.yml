version: '3.7'
services:
  postgres:
    container_name: project_core_postgres
    image: postgres:latest
    restart: always
    tty: true
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: core_app
      PGDATA: /data/postgres
    volumes:
      - ./dbdata:/var/lib/postgresql/data
      - ./keycloak/create-keycloak-database.sql:/docker-entrypoint-initdb.d/create-keycloak-database.sql
    ports:
      - 5432:5432
    networks:
      - project_core_network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      start_period: 10s

  keycloak:
    container_name: project_core_keycloak
    image: quay.io/keycloak/keycloak:26.1.4
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/core_app_keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
    ports:
      - 9090:8080
    command: start-dev --spi-theme-static-max-age=-1 --spi-theme-cache-themes=false --spi-theme-cache-templates=false
    volumes:
      - ./keycloak-themes:/opt/keycloak/themes
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - project_core_network

  loki:
    container_name: project_core_loki
    image: grafana/loki:main
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"

  elasticsearch:
    container_name: project_core_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - project_core_network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  logstash:
    container_name: project_core_logstash
    image: docker.elastic.co/logstash/logstash:8.6.0
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    environment:
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
    ports:
      - "5044:5044"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - project_core_network

networks:
  project_core_network:
    driver: bridge