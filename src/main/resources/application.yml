spring:
  application:
    name: module_core
  datasource:
    url: jdbc:postgresql://${postgres.url}/${postgres.schema}
    username: ${postgres.username}
    password: ${postgres.password}
    hikari:
      auto-commit: false
      connection-timeout: 250
      max-lifetime: 600000
      maximum-pool-size: 20
      maximum-idle: 10
      pool-name: master
  jpa:
    show-sql: true
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate.generate_statistics: false
      hibernate.connection.provider_disables_autocommit: true
      hibernate.globally_quoted_identifiers: true
  flyway:
    baseline-on-migrate: true
    enabled: true
    baseline-description: "init"
    baseline-version: 0
    locations: classpath:db/migration
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    url: ${spring.datasource.url}
  security:
    basic:
      enabled: false
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${configs.keycloak.client-id}
            client-secret: ${configs.keycloak.client-secret}
            scope: openid
            provider: keycloak
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            token-uri: ${configs.keycloak.auth-server-url}/realms/${configs.keycloak.realm}/protocol/openid-connect/token
            issuer-uri: ${configs.keycloak.auth-server-url}/realms/${configs.keycloak.realm}
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          issuer-uri: ${configs.keycloak.auth-server-url}/realms/${configs.keycloak.realm}
          jwt-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

server:
  port: 8080
  servlet:
    context-path: /api
  compression:
    enabled: true
    min-response-size: 1024
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  undertow:
    threads:
      worker: 64
      io: 4

jwt:
  auth:
    converter:
      resource-id: project-core-rest-api
      principle-attribute: preferred_username

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    tags-sorter: alpha
    doc-expansion: none
    operations-sorter: alpha
    filter: true

management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health, info, metrics, prometheus
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
  observations:
    key-values:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0